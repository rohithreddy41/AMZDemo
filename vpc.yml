# VPC
VPC:
  Type: 'AWS::EC2::VPC'
  Properties:
    CidrBlock:
      'Fn::Join': [ '/', [ '10.0.0.0', '16' ] ]
    EnableDnsSupport: true
    EnableDnsHostnames: true
    InstanceTenancy: 'default'
    Tags:
      - Key: 'Name'
        Value:
          Ref: 'AWS::StackName'

# Internet access
PubSubnetZoneA:
  Type: 'AWS::EC2::Subnet'
  Properties:
    AvailabilityZone:
      Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: 'AWS::Region'
    CidrBlock:
      Fn::FindInMap:
        - NetworkToSubnet
        - '10.0.0.0'
        - PubSubnetZoneA
    MapPublicIpOnLaunch: 'True'
    VpcId:
      Ref: 'VPC'
    Tags:
      - Key: 'Name'
        Value:
          'Fn::Join': [ ':', [ 'Public', 'Zone A', !Ref 'AWS::StackName' ] ]


# Internet access zoneB
PubSubnetZoneB:
  Type: 'AWS::EC2::Subnet'
  Properties:
    AvailabilityZone:
      Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: 'AWS::Region'
    CidrBlock:
      Fn::FindInMap:
        - NetworkToSubnet
        - '10.0.0.0'
        - PubSubnetZoneB
    MapPublicIpOnLaunch: 'True'
    VpcId:
      Ref: 'VPC'
    Tags:
      - Key: 'Name'
        Value:
          'Fn::Join': [ ':', [ 'Public', 'Zone B', !Ref 'AWS::StackName' ] ]


# Gateway to the internet
InternetGateway:
  Type: 'AWS::EC2::InternetGateway'
  Properties:
    Tags:
      - Key: 'Name'
        Value:
          Ref: 'AWS::StackName'

# Associate the gateway to the VPC
GatewayAttachment:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
    InternetGatewayId:
      Ref: 'InternetGateway'
    VpcId:
      Ref: 'VPC'

# Routing table for the public subnet in availability zone A
RouteTablePubZoneA:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId:
      Ref: 'VPC'
    Tags:
      - Key: 'Name'
        Value:
          'Fn::Join': [ ':', [ 'Public', 'Zone A', !Ref 'AWS::StackName' ] ]

# Routing table for the public subnet in availability zone B
RouteTablePubZoneB:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId:
      Ref: 'VPC'
    Tags:
      - Key: 'Name'
        Value:
          'Fn::Join': [ ':', [ 'Public', 'Zone B', !Ref 'AWS::StackName' ] ]

# Route traffic through the internet gateway
RoutePubZoneA:
  DependsOn:
    - InternetGateway
  Type: AWS::EC2::Route
  Properties:
    DestinationCidrBlock: '0.0.0.0/0'
    GatewayId:
      Ref: 'InternetGateway'
    RouteTableId:
      Ref: 'RouteTablePubZoneA'

# Route traffic through the internet gateway
RoutePubZoneB:
  DependsOn:
    - InternetGateway
  Type: AWS::EC2::Route
  Properties:
    DestinationCidrBlock: 0.0.0.0/0
    GatewayId:
      Ref: 'InternetGateway'
    RouteTableId:
      Ref: 'RouteTablePubZoneB'

# Associate public subnet to its routing table
RouteAssociationPubSubnetZoneA:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId:
      Ref: 'PubSubnetZoneA'
    RouteTableId:
      Ref: 'RouteTablePubZoneA'

# Associate public subnet to its routing table
RouteAssociationPubSubnetZoneB:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId:
      Ref: 'PubSubnetZoneB'
    RouteTableId:
      Ref: 'RouteTablePubZoneB'